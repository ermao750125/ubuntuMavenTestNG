package ToolsQA.DemoMavenEclipseProject;


import java.util.concurrent.TimeUnit;
 
import org.openqa.selenium.By;
 
import org.openqa.selenium.WebDriver;
 
import org.openqa.selenium.firefox.FirefoxDriver;
 
import org.testng.annotations.Test;
 
import org.testng.annotations.BeforeMethod;
 
import org.testng.annotations.AfterMethod;
 
public class open_firefox {
 
	public WebDriver driver;
 
  @Test
   public void navigateToLibrary_firefox() {
	  //driver.get("http://www.torontopubliclibrary.ca");
	  //driver.get("file:///home/ermao/et510-workspace-maven/DemoMavenEclipseProject/browsersExeFilesFOlder/torontopubliclibraryHomePage.html");
      driver.findElement(By.xpath("/html/body/div[3]/div[1]/div/ul/li[1]/a/div")).click();
      
  }
 
  @BeforeMethod
   public void beforeMethod() {
 
	  // Create a new instance of the Firefox driver
	  System.setProperty("webdriver.gecko.driver","/home/ermao/et510-workspace-maven/DemoMavenEclipseProject/browsersExeFilesFOlder/geckodriver");
	driver.get("file:///home/ermao/Documents/browserExeFilesFolder/torontopubliclibraryHomePage.html");
	  //initialize firefox driver object to open firefox browser.
	 
 
      driver = new FirefoxDriver();
 
      //Put a Implicit wait, this means that any search for elements on the page could take the time the implicit wait is set for before throwing exception
 
      driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
 
      //Launch the Online Store Website
 
    
 
  }
 
  @AfterMethod
   public void afterMethod() {
 
	  // Close the driver
 
      driver.quit();
 
  }
 
}